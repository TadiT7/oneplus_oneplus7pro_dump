#
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

on fs
   setprop sys.wifitracing.started 0

on property:sys.boot_completed=1 && property:sys.wifitracing.started=0
   # Create trace buffer, and set basic configuration.
   mkdir /sys/kernel/debug/tracing/instances/wifi 711
   restorecon_recursive /sys/kernel/debug/tracing/instances/wifi
   write /sys/kernel/debug/tracing/instances/wifi/tracing_on 0
   write /sys/kernel/debug/tracing/instances/wifi/buffer_size_kb 1
   write /sys/kernel/debug/tracing/instances/wifi/trace_options disable_on_free

   # Enable cfg80211 events for connection and key management events.
   # - Events are not actually logged until WifiService writes "1" to
   #   /sys/kernel/debug/tracing/instances/wifi/tracing_on.
   # - WifiService is responsible for turning tracing off and on.
   write /sys/kernel/debug/tracing/instances/wifi/events/cfg80211/cfg80211_gtk_rekey_notify/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/cfg80211/rdev_add_key/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/cfg80211/rdev_assoc/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/cfg80211/rdev_auth/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/cfg80211/rdev_connect/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/cfg80211/rdev_set_default_key/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/cfg80211/rdev_set_default_mgmt_key/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/cfg80211/rdev_set_rekey_data/enable 1

   # Enable datapath events for Wifi.
   # - Events are not actually logged until WifiService writes "1" to
   #   /sys/kernel/debug/tracing/instances/wifi/tracing_on.
   # - WifiService will ensure that tracing is turned back off,
   #   when a connection attempt ends (whether in success or failure)
   write /sys/kernel/debug/tracing/instances/wifi/events/net/filter name==${wifi.interface:-wlan0}
   write /sys/kernel/debug/tracing/instances/wifi/events/net/net_dev_queue/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/net/net_dev_xmit/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/net/netif_rx/enable 1
   write /sys/kernel/debug/tracing/instances/wifi/events/net/netif_receive_skb/enable 1

   # Set DAC to allow system_server to enable/disable, and read wifi trace
   # events.
   chown system /sys/kernel/debug/tracing/instances/wifi/tracing_on
   chown system /sys/kernel/debug/tracing/instances/wifi/free_buffer
   chown system /sys/kernel/debug/tracing/instances/wifi/trace
   chmod 200 /sys/kernel/debug/tracing/instances/wifi/tracing_on
   chmod 400 /sys/kernel/debug/tracing/instances/wifi/free_buffer
   chmod 600 /sys/kernel/debug/tracing/instances/wifi/trace
   setprop sys.wifitracing.started 1

on property:sys.boot_completed=1 && property:wifi.interface=* && sys.wifitracing.started=1
   # Override default value.
   write /sys/kernel/debug/tracing/instances/wifi/events/net/filter name==${wifi.interface}

on property:persist.vendor.oem.wifi.cnssdiag=1
   setprop vendor.debug.mmosal.config 6015:63:6013:63
   setprop persist.vendor.debug.wfdcdbg true

on property:persist.vendor.oem.wifi.cnssdiag=0 && property:persist.vendor.oem.wifi.logpath=data
   setprop vendor.debug.mmosal.config ""
   setprop persist.vendor.debug.wfdcdbg false

on property:persist.vendor.oem.wifi.cnssdiag=0 && property:persist.vendor.oem.wifi.logpath=sdcard
   setprop vendor.debug.mmosal.config ""
   setprop persist.vendor.debug.wfdcdbg false
   setprop persist.vendor.oem.wifi.copytosd 1

on property:persist.vendor.oem.wifi.copytosd=1
   copyall /data/vendor/wifi/wlan_logs /sdcard/oem_log/wlan_logs
   setprop persist.vendor.oem.wifi.copytosd 0

on property:persist.vendor.qxdm.copymask=1
   mkdir /data/vendor/diag_logs 0770 system system
   copyall /sdcard/oem_log/diag_logs/Diag.cfg /data/vendor/diag_logs/Diag.cfg
   chmod 666 /data/vendor/diag_logs/Diag.cfg
   mkdir /data/vendor/diag_logs/mdm 0770 system system
   copyall /sdcard/oem_log/diag_logs/mdm/Diag.cfg /data/vendor/diag_logs/mdm/Diag.cfg
   chmod 666 /data/vendor/diag_logs/mdm/Diag.cfg
   setprop persist.vendor.qxdm.copymask 0

on property:persist.vendor.qxdm.copylog=1
   copyall /data/vendor/diag_logs /sdcard/oem_log/diag_logs
   setprop persist.vendor.qxdm.copylog 0

#ifdef VENDOR_EDIT
#patrickhuang, 2018/09/21, [AN-422] add for property-trigger mechanism when observing telephony-abnormal
#To copy the QXDM-mask to the specific path before QXDM enabling.
on property:persist.sys.power_mask=data
    mkdir /sdcard/oem_log
    mkdir /sdcard/oem_log/diag_logs
    copy /system/etc/mask/NEWlogmask_dc.cfg /sdcard/oem_log/diag_logs/Diag.cfg
on property:persist.sys.power_mask=service
    mkdir /sdcard/oem_log
    mkdir /sdcard/oem_log/diag_logs
    copy /system/etc/mask/NEWlogmask_ss.cfg /sdcard/oem_log/diag_logs/Diag.cfg
on property:persist.sys.power_mask=ims
    mkdir /sdcard/oem_log
    mkdir /sdcard/oem_log/diag_logs
    copy /system/etc/mask/NEWlogmask_ims.cfg /sdcard/oem_log/diag_logs/Diag.cfg
#patrickhuang, 2018/10/26, [AN-422] add for property-trigger mechanism when observing unexpected rebooting under QXDM-recording
#(trigged by OnePlusStandbyAnalyzer), so I need to clean-up "those QXDM trash" under vendor partition in this way.
on property:persist.sys.qxdm_clean_old=1
    md /data/vendor/diag_logs
    setprop persist.sys.qxdm_clean_old 0
#endif /* VENDOR_EDIT */

#ifdef /* VENDOR_EDIT */
on property:vendor.wlan.sniffer.dump=1
    chmod 666 /data/vendor/sniffer.pcap
    copyall /data/vendor/sniffer.pcap /storage/emulated/0/sniffer.pcap
    setprop vendor.wlan.sniffer.dump 0
#endif /* VENDOR_EDIT */
