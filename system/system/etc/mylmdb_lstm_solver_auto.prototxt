net: "/data/connor_training/lenet_lmdb.prototxt"

test_interval: 100  # calculate Validation every $(test_interval) iterations.
display: 100  # display every $(display) iterations.
average_loss: 100  # average batches looses in a epoch.
test_iter: 100  # batch_size * test_iter should at least cover all of the test set.
test_compute_loss: 1  # (True): Compute loss for each Validation Process.

## Gradient
type: "Adam"
momentum: 0.9

## Regularization
weight_decay: 0.0005

## The LearningRate policy
##
## exp:
##	base_lr * gamma^iter
##
##
## inv:
##	base_lr * (1 + gamma * iter)^(-power)
##	
base_lr: 0.0005
lr_policy: "inv"
gamma: 0.0001
power: 0.75

solver_mode: CPU

oneplus_param { train_iters_before_rest: 500   loss_threshold_to_save_model: 2.5 }
snapshot_after_train: 0  # leaving the control of saving model to the OnePlus block.
max_iter: 100000

# snapshot intermediate results
snapshot_prefix: "/data/connor_training/app_predict"
